name: Build and Deploy to AKS

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker images for app1
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/app1:latest -f app1/Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/app1:latest

      - name: Build and push Docker images for app2
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/app2:latest -f app2/Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/app2:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Apply app1 deployment
        run: kubectl apply -f app1-deployment.yaml

      - name: Apply app2 deployment
        run: kubectl apply -f app2-deployment.yaml

      - name: Update app1 image
        run: kubectl set image deployment/app1 app1=${{ secrets.DOCKER_USERNAME }}/app1:latest

      - name: Update app2 image
        run: kubectl set image deployment/app2 app2=${{ secrets.DOCKER_USERNAME }}/app2:latest
  local-deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Docker Compose  
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Change to repository directory
        run: cd ${{ github.workspace }}

      - name: List files in working directory
        run: ls -la ${{ github.workspace }}

      - name: Set up Docker Compose
        working-directory: ${{ github.workspace }}
        run: |
          docker-compose up --build

      - name: Print Docker Compose logs
        working-directory: ${{ github.workspace }}
        run: |
          docker-compose logs
